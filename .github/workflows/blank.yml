name: CI

env:
    DOCKER_BUILDKIT: 1

on:
    push:
        branches: [ main, develop, 'feature/*' ]
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+'
            - '[0-9]+.[0-9]+.[0-9]+'
    pull_request:
        branches: [ main, develop, 'feature/*' ]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    publish_docker_api:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        strategy:
            matrix:
                node-version: [ 24 ]
        steps:
            -   uses: actions/checkout@v3
            -   name: Set Branch
                id: short_ref
                run: echo "short_ref=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
            -   name: Set git_url_commit
                id: git_url_commit
                run: echo "git_url_commit=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}" >> $GITHUB_OUTPUT
            -   name: Set git_url_ci_run
                id: git_url_ci_run
                run: echo "git_url_ci_run=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT
            -   name: Set git_commit
                id: git_commit
                run: echo "git_commit=${GITHUB_REPOSITORY}/${GITHUB_SHA}" >> $GITHUB_OUTPUT
            -   name: Set git_ci_run
                id: git_ci_run
                run: echo "git_ci_run=${GITHUB_REPOSITORY}/${GITHUB_RUN_ID}" >> $GITHUB_OUTPUT

            -   name: Docker Registry login
                run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

            -   name: Build image `api`
                # todo: inject version/branch into build
                run: |
                    docker image build  \
                        --build-arg VCS_REF=${GITHUB_SHA} \
                        --build-arg VCS_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} \
                        --build-arg CI_RUN_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} \
                        --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                        --build-arg VERSION=${{ steps.short_ref.outputs.short_ref }} \
                        -t ghcr.io/elbakerino/baistro -f Dockerfile .

            -   name: Generate OpenAPI spec
                run: |
                    #docker run --rm -v $(pwd):/app/spec ghcr.io/elbakerino/baistro \
                    #    sh -c "poetry run flask --app baistro.server:app spec -f yaml > /app/spec/openapi.yaml"
                    docker run --rm -v $(pwd):/host/spec ghcr.io/elbakerino/baistro \
                        cp -r /app/spec /host/spec
            -   name: Upload OpenAPI spec yaml artifact
                uses: actions/upload-artifact@v4
                with:
                    name: openapi-spec-yaml
                    path: openapi.yaml
            -   name: Upload OpenAPI spec json artifact
                uses: actions/upload-artifact@v4
                with:
                    name: openapi-spec-json
                    path: openapi.json

            -   name: Publish image `api` as `develop`
                if: github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature/')
                # todo: would images per feature bloat the registry or a good idea? maybe together with a cleanup when closing the feature branch/PR
                run: |
                    docker tag ghcr.io/elbakerino/baistro ghcr.io/elbakerino/baistro:develop
                    docker push ghcr.io/elbakerino/baistro:develop

            -   name: Publish image `api` as `main`
                if: github.ref == 'refs/heads/main'
                run: |
                    docker tag ghcr.io/elbakerino/baistro ghcr.io/elbakerino/baistro:main
                    docker push ghcr.io/elbakerino/baistro:main

            -   name: Publish image `api` tagged & latest
                if: startsWith(github.ref, 'refs/tags/')
                env:
                    RELEASE_VERSION: ${{ steps.short_ref.outputs.short_ref }}
                run: |
                    docker tag ghcr.io/elbakerino/baistro ghcr.io/elbakerino/baistro:$RELEASE_VERSION
                    docker push ghcr.io/elbakerino/baistro:$RELEASE_VERSION
                    docker tag ghcr.io/elbakerino/baistro ghcr.io/elbakerino/baistro:latest
                    docker push ghcr.io/elbakerino/baistro:latest
